openapi: 3.0.0
tags:
  - name: game
paths:
  /api/game/list:
    get:
      summary: Gets the list of available game along with some statistics.
      tags:
        - game
      responses:
        "200":
          description: OK. More details on the page below.
  /api/game/start:
    post:
      summary: Starts a game session.
      tags:
        - game
      requestBody:
        description: The identifiers of the map.
        name: Map id
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_map:
                  type: string
                  summary: The id of the map
                  example: "FRANCE_DEPARTMENTS"
                id_gamemode:
                  type: string
                  summary: The id of the gamemode
                  example: "AGAINST_THE_CLOCK"
      responses:
        "200":
          description: OK
  /api/game/save-entry:
    post:
      security:
        - sessionId: []
      summary: Allows to send a result that the client computed as correct.
      tags:
        - game
      requestBody:
        description: A json object representing the player's answer.
        name: Player's answer
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                response:
                  type: string
                  summary: Player's answer
                  example: "loire atlantique"
                supposedCorrespondance:
                  type: string
                  summary: The data's id supposedly associated, here 'FR-44'
                  example: "FR-44"
      responses:
        "200":
          description: |
            What the server concludes with the given answer.
            |Enum|Value|
            |-|-|
            |OK|1|
            |ALREADY_FOUND|2|
            |WRONG_GUESS|3|
            |UNKNOWN_ERROR|4|
          content:
            application/json:
              schema:
                type: object
                properties:
                  reponse_code:
                    type: number
                    example: 1
                    paths:
  /api/game/timeout:
    post:
      security:
        - sessionId: []
      summary: Tells the server session ended normally by timeout.
      tags:
        - game
      responses:
        "200":
          description: OK
  /api/game/give-up:
    post:
      security:
        - sessionId: []
      summary: Tells the server that the player gave up.
      tags:
        - game
      responses:
        "200":
          description: OK

# defines cookie
components:
  securitySchemes:
    sessionId:
      type: string
      in: cookie
      name: SESSIONID
